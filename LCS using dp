#include<iostream>
#define yibai 100

void GetLength(char *x, char *y, int m, int n, int c[][yibai], int mark[][yibai])
{
    int i, j;                          //c为存贮子序列长度的二维数组
                                       //mark为标记数组，用于找到具体的最长公共子序列
    for(i = 0; i <= m; i++)            //mark=0，箭头指向斜上方
        c[i][0] = 0;                   //mark=1，箭头指向左方
    for(j = 1; j <= n; j++)            //mark=-1，箭头指向上
        c[0][j] = 0;
    for(i = 1; i<= m; i++)
    {
        for(j = 1; j <= n; j++)
        {
            if(x[i-1] == y[j-1])
            {
                c[i][j] = c[i-1][j-1] + 1;
                mark[i][j] = 0;
            }
            else if(c[i-1][j] >= c[i][j-1])
            {
                c[i][j] = c[i-1][j];
                mark[i][j] = 1;
            }
            else
            {
                c[i][j] = c[i][j-1];
                mark[i][j] = -1;
            }
        }
	}
	printf("%d",c[m][n]);
}

void PrintLCS(int mark[][yibai], char *x, int i, int j)
{
    if(i == 0 || j == 0)
        return;
    if(mark[i][j] == 0)
    {
        PrintLCS(mark, x, i-1, j-1);
        printf("%c ", x[i-1]);
    }
    else if(mark[i][j] == 1)
        PrintLCS(mark, x, i-1, j);
    else
        PrintLCS(mark, x, i, j-1);
}

int main()
{
	char x[yibai],y[yibai];
    int mark[yibai][yibai],c[yibai][yibai];
	scanf("%s",x);
	scanf("%s",y);
    int m,n;
    m = strlen(x);
    n = strlen(y);
    GetLength(x, y, m, n, c, mark);
	printf(",");
    PrintLCS(mark, x, m, n);
    return 0;
}




void GetLength(char* x,char* y,int m,int n,int i,int j)
{
    if(i>=m || j>=n)
        return 0;
    if(x[i]==y[j])
        return 1+GetLength(x,y,m,n,i+1,j+1);
    else
        return GetLength(x,y,m,n,i+1,j)>GetLength(x,y,m,n,i,j+1)? GetLength(x,y,m,n,i+1,j):GetLength(x,y,m,n,i,j+1);
}
